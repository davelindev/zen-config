[build-system]
requires = ["setuptools>=62.6.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "zen_config"
version = "0.0.0"
description = "A sample Python project for configuration management"
readme = "README.md"
requires-python = ">=3.10.0"
# license = {file = "LICENCE.txt"}
keywords = ["ai", "audio", "data", "utilities"]

authors = [
  { name = "David Linden", email = "dlinden@speechtechlabs.com" }
]

maintainers = [
  { name = "David Linden", email = "dlinden@speechtechlabs.com" }
]

classifiers = [
  # How mature is this project? Common values are
  #   3 - Alpha
  #   4 - Beta
  #   5 - Production/Stable
  "Development Status :: 3 - Alpha",

  # Indicate who your project is intended for
  "Intended Audience :: Developers",
  "Topic :: Software Development :: Build Tools",

  # Pick your license as you wish
  "License :: OSI Approved :: MIT License",

  # Specify the Python versions you support here. In particular, ensure
  # that you indicate you support Python 3. These classifiers are *not*
  # checked by "pip install". See instead "requires-python" key in this file.
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3 :: Only",
  "Topic :: Multimedia :: Sound/Audio",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dynamic = [ "dependencies" ]

[project.urls]
"Homepage" = "https://gitlab.speechtechlabs.com/tutorials/configs"
"Bug Reports" = "https://gitlab.speechtechlabs.com/tutorials/configs/-/issues"
"Source" = "https://gitlab.speechtechlabs.com/tutorials/configs"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.dynamic]
dependencies = {file = ["requirements.txt"]}


[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]
per-file-ignores = {}
extend-include = ["*.ipynb"]
line-length = 99

[tool.ruff.lint]
select = ["E4", "E7", "E9", "F"]
ignore = []
fixable = ["ALL"]
unfixable = []

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = false
docstring-code-line-length = "dynamic"
